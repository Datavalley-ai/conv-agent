apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-config
  namespace: ai
data:
  NODE_ENV: "production"
  PORT: "3000"
  MONGODB_URI: "mongodb://mongodb.ai.svc.cluster.local:27017/ai-interviewer"
  REDIS_URI: "redis://redis.ai.svc.cluster.local:6379"
  OLLAMA_URL: "http://ollama.ai.svc.cluster.local:11434"
  WRAPPER_URL: "http://dv-wrapper.ai.svc.cluster.local"
  WRAPPER_INTERNAL_KEY: "9d7h32Ghpq_!Bxm92JKj3kLvaL@8qYpf"
---
apiVersion: v1
kind: Secret
metadata:
  name: gateway-secret
  namespace: ai
type: Opaque
stringData:
  JWT_SECRET: "772bf5387ef5156f0c250b6fe01041b2622c6289d98f3af4a8c02c8856013d25"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: interview-gateway
  namespace: ai
spec:
  replicas: 3
  selector:
    matchLabels: { app: interview-gateway }
  template:
    metadata: { labels: { app: interview-gateway } }
    spec:
      containers:
      - name: gateway
        image: asia-south1-docker.pkg.dev/datavalley-383814/dv-ai/interview-gateway:v1
        ports: [{ containerPort: 3000 }]
        envFrom:
        - configMapRef: { name: gateway-config }
        - secretRef: { name: gateway-secret }
        readinessProbe:
          httpGet: { path: /api/v1/healthz, port: 3000 }
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet: { path: /api/v1/healthz, port: 3000 }
          initialDelaySeconds: 10
          periodSeconds: 20
        resources:
          requests: { cpu: "200m", memory: "256Mi" }
          limits: { cpu: "500m", memory: "512Mi" }
---
apiVersion: v1
kind: Service
metadata:
  name: interview-gateway
  namespace: ai
spec:
  selector: { app: interview-gateway }
  ports:
    - name: http
      port: 80
      targetPort: 3000
  type: ClusterIP

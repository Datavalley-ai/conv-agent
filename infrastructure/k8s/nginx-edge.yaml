apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-interviewer-edge-nginx
  namespace: ai
data:
  nginx.conf: |
    worker_processes  auto;
    events { worker_connections  1024; }

    http {
      # Respect original client IP (Cloudflare adds CF-Connecting-IP)
      real_ip_header CF-Connecting-IP;
      set_real_ip_from 0.0.0.0/0;

      sendfile on;
      client_max_body_size 50m;

      proxy_read_timeout 3600s;
      proxy_send_timeout 3600s;
      proxy_connect_timeout 30s;

      # Backend target (ClusterIP service)
      upstream backend {
        server ai-interviewer.ai.svc.cluster.local:80;
      }

      # HTTP -> HTTPS
      server {
        listen 80;
        listen [::]:80;
        return 301 https://$host$request_uri;
      }

      # HTTPS terminator
      server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        ssl_certificate     /etc/nginx/tls/tls.crt;
        ssl_certificate_key /etc/nginx/tls/tls.key;

        # Basic TLS hardening (simple, safe defaults)
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;

        # Proxy (includes WebSockets)
        location / {
          proxy_http_version 1.1;
          proxy_set_header Host              $host;
          proxy_set_header X-Real-IP         $remote_addr;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Upgrade           $http_upgrade;
          proxy_set_header Connection        $connection_upgrade;
          proxy_pass http://backend;
        }
      }

      map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-interviewer-edge
  namespace: ai
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-interviewer-edge
  template:
    metadata:
      labels:
        app: ai-interviewer-edge
    spec:
      containers:
        - name: nginx
          image: nginx:1.25-alpine
          ports:
            - containerPort: 80
            - containerPort: 443
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: tls
              mountPath: /etc/nginx/tls
              readOnly: true
          readinessProbe:
            httpGet:
              path: /
              port: 80   # 301 is treated as success (2xxâ€“3xx)
            initialDelaySeconds: 3
            periodSeconds: 5
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
      volumes:
        - name: nginx-config
          configMap:
            name: ai-interviewer-edge-nginx
        - name: tls
          secret:
            secretName: cloudflare-origin-tls
